services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.4.0
    container_name: railgraph-zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    networks:
      - railgraph-network
    restart: unless-stopped

  kafka:
    image: confluentinc/cp-kafka:7.4.0
    container_name: railgraph-kafka
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:29092,PLAINTEXT_INTERNAL://0.0.0.0:9092
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:29092,PLAINTEXT_INTERNAL://kafka:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_INTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT_INTERNAL
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
      # Pre-create topics with 3 partitions for better throughput and parallel processing
      KAFKA_CREATE_TOPICS: "ticket-events:3:1,transaction-events:3:1"
      socket.send.buffer.bytes: 1048576
      num.network.threads: 3
    ports:
      - "29092:29092"
    depends_on:
      - zookeeper
    networks:
      - railgraph-network
    restart: unless-stopped

  postgres:
    image: postgres:15
    container_name: railgraph-postgres
    environment:
      POSTGRES_DB: railgraph
      POSTGRES_USER: railgraph
      POSTGRES_PASSWORD: railgraph123
    ports:
      - "55432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - railgraph-network
    restart: unless-stopped

  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: railgraph-pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@railgraph.com
      PGADMIN_DEFAULT_PASSWORD: admin123
    ports:
      - "8082:80"
    depends_on:
      - postgres
    networks:
      - railgraph-network
    restart: unless-stopped

  flink-jobmanager:
    image: flink:1.17.1-scala_2.12
    container_name: railgraph-flink-jobmanager
    command: jobmanager
    volumes:
      - ./flink-jobs/target/flink-jobs-1.0-SNAPSHOT-jar-with-dependencies.jar:/opt/flink/usrlib/flink-jobs.jar
      - ./monitoring/flink/flink-conf.yaml:/opt/flink/conf/flink-conf.yaml
    environment:
      - JOB_MANAGER_RPC_ADDRESS=flink-jobmanager
    ports:
      - "8081:8081"
      - "9249:9249"
    networks:
      - railgraph-network
    depends_on:
      - kafka
    restart: unless-stopped

  flink-taskmanager:
    image: flink:1.17.1-scala_2.12
    container_name: railgraph-flink-taskmanager
    command: taskmanager
    volumes:
      - ./monitoring/flink/flink-conf.yaml:/opt/flink/conf/flink-conf.yaml
    environment:
      - JOB_MANAGER_RPC_ADDRESS=flink-jobmanager
      - taskmanager.network.memory.max=1024mb
      - taskmanager.network.request-backoff.max=5000
      - taskmanager.memory.process.size=2560m
      - taskmanager.numberOfTaskSlots=4
    ports:
      - "9250:9249"
    depends_on:
      - flink-jobmanager
    networks:
      - railgraph-network
    restart: unless-stopped

  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    container_name: railgraph-kafka-ui
    ports:
      - "8083:8080"
    environment:
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:9092
      KAFKA_CLUSTERS_0_ZOOKEEPER: zookeeper:2181
    depends_on:
      - kafka
    networks:
      - railgraph-network
    restart: unless-stopped

  backend:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: railgraph-backend
    ports:
      - "8085:8080"
    environment:
      - SPRING_PROFILES_ACTIVE=dev
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/railgraph
      - SPRING_DATASOURCE_USERNAME=railgraph
      - SPRING_DATASOURCE_PASSWORD=railgraph123
      - KAFKA_BOOTSTRAP_SERVERS=kafka:9092
    depends_on:
      - postgres
      - kafka
    networks:
      - railgraph-network
    restart: unless-stopped

  prometheus:
    image: prom/prometheus:latest
    container_name: railgraph-prometheus
    volumes:
      - ./monitoring/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - ./monitoring/prometheus/alerts:/etc/prometheus/alerts
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
      - '--web.enable-lifecycle'
    ports:
      - "9090:9090"
    networks:
      - railgraph-network
    restart: unless-stopped

  grafana:
    image: grafana/grafana:latest
    container_name: railgraph-grafana
    volumes:
      - grafana_data:/var/lib/grafana
      - ./monitoring/grafana/provisioning:/etc/grafana/provisioning
      - ./monitoring/grafana/dashboards:/var/lib/grafana/dashboards
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin123
      - GF_USERS_ALLOW_SIGN_UP=false
    ports:
      - "3000:3000"
    depends_on:
      - prometheus
    networks:
      - railgraph-network
    restart: unless-stopped

  kafka-exporter:
    image: danielqsj/kafka-exporter:latest
    container_name: railgraph-kafka-exporter
    command:
      - '--kafka.server=kafka:9092'
    ports:
      - "9308:9308"
    depends_on:
      - kafka
    networks:
      - railgraph-network
    restart: unless-stopped

  alertmanager:
    image: prom/alertmanager:latest
    container_name: railgraph-alertmanager
    volumes:
      - ./monitoring/alertmanager/alertmanager.yml:/etc/alertmanager/alertmanager.yml
      - alertmanager_data:/alertmanager
    command:
      - '--config.file=/etc/alertmanager/alertmanager.yml'
      - '--storage.path=/alertmanager'
      - '--web.external-url=http://localhost:9093'
    ports:
      - "9093:9093"
    networks:
      - railgraph-network
    restart: unless-stopped

volumes:
  postgres_data:
  prometheus_data:
  grafana_data:
  alertmanager_data:

networks:
  railgraph-network:
    driver: bridge